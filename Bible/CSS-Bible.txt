BASIC CSS - REVIEW GUIDE
    CSS Basics
        What is CSS?: Cascading Style Sheets (CSS) is a markup language used to apply styles to HTML elements. CSS is used for colors, background images, layouts and more.

        Basic Anatomy of a CSS Rule:
            Basic Syntax: A CSS rule is made up of two main parts: a selector and a declaration block.A selector is a pattern used in CSS to identify and target specific HTML elements for styling.A declaration block applies a set of styles for a given selector or selectors.
                selector {
                    property: value;
                }

        meta name="viewport" Element: This meta element gives the browser instructions on how to control the page's dimensions and scaling on different devices, particularly on mobile phones and tablets.

        Default Browser Styles: Each HTML element will have default browser styles applied to them. This usually includes items like default margins and paddings.

    Inline, Internal, and External CSS
        Inline CSS: These styles are written directly within an HTML element using the style attribute. Most of the time you will not be using inline CSS due to separation of concerns.
            Basic Syntax: <p style="color: red;"> This is a red paragraph. </p>

        Internal CSS: These styles are written within the <style> tags inside the <head> section of an HTML document. This can be useful for creating short code examples, but usually you will not need to be using internal CSS.

        External CSS: These styles are written in a separate CSS file and linked to the HTML document using the <link> element in the <head> section. For most projects, you will use an external CSS file over internal or inline CSS.

    Working with the Width: and Height: Properties
        Width Property: This property specifies the width of an element. If you do not specify a width, then the default is set to "auto." This means the element will take up the full width of its parent container.

        Min-width Property: This property specifies the minimum width for an element.

        Max-width Property: This property specifies the maximum width for an element.

        Height Property: This property specifies the height of an element. Similarly, the height is "auto" by default, which means it will adjust to the content inside.

        Min-height Property: This property specifies the minimum height for an element.

        Max-height Property: This property specifies the maximum height for an element.

    Different Types of CSS Combinators
        Descendant Combinator: This combinator is used to target elements that are descendants of a specified parent element. 
            Example Code: 
            *html being stylized*
            <ul>
                <li>EB12</li>
                <li>EB13</li>
                <li>EB14</li>
            </ul>
            *CSS syntax*
            ul li {
                background-color: yellow
            }

        Child Combinator: This combinator is used to select elements that are direct children of a specified parent element.
            Basic Syntax: >
            Example Code:
            *html being stylized*
            <div class="container">
                <p> This will get styled. </p>
                
                <div>
                    <p> This will not get styled. </p>
                </div>
            </div>
            *CSS Syntax*
            .container > p {
                background-color: black;
                color: white;
            }

        Next-sibling Combinator: This combinator selects an element that immediately follows a specified sibling element. 
            Basic Syntax: + 
            Example Code: 
            *html being stylized*
            <h2>I am a subheading</h2>
            <p>This paragraph element will get a red background.</p>
            *CSS Syntax*
            h2 + p {
                background-color: red;
            }

        Subsequent-sibling Combinator: This combinator selects all siblings of a specified element that come after it.
            Basic Syntax: ~
            Example Code:
            *html being stylized*
            <div class="container">
                <p>This will not get styled.</p>
                <ul>
                    <li>YS003</li>
                    <li>YS005</li>
                    <li>YS006</li>
                </ul>
                <p>This will get styled.</p>
            </div>
            <p>this will not get styled.</p>
            *CSS Syntax*
            ul ~ p {
                background-color: green;
            }

    Inline, Block, and Inline-Block Level elements
        Inline Level Elements: Inline elements only take up as much width as they need and do not start on a new line. These elements flow within the content, allowing text and other inline elements to appear alongside them.
            Examples Include: span, anchor, and image elements

        Block Level Elements: Block-level elements start on a new line and take up the full width available to them by default, stretching across the width of their container. 
            Examples Include: div, paragraph, and section elements

        Inline-Block Level Elements: You can set an element to "inline-block" by using the display: property. This causes elements to behave like inline elements but can have a width: and height: set like block-level elements.

    Margin and Padding 
        Margin Property: This property is used to apply space outside the element, between the element's border and the surrounding elements.

        Padding Property: This property is used to apply space inside the element, between the content and its border.

        Margin Shorthand: You can specify 1–4 values to set the margin sides. One value applies to all four sides; two values set top/bottom, then right/left; three values set top, right/left, then bottom; four values set top, right, bottom, left - in that order.

        Padding Shorthand: You can specify 1–4 values to set the margin sides. One value applies to all four sides; two values set top/bottom, then right/left; three values set top, right/left, then bottom; four values set top, right, bottom, left - in that order.

    CSS Specificity
        Inline CSS Specificity: Inline CSS has the highest specificity because it is applied directly to the element. It overrides any internal or external CSS.
            Specificity Value: (1, 0, 0, 0)

        Internal CSS Specificity: Internal CSS is defined within a style element in the head section of the HTML document. It has lower specificity than inline styles but can override external styles.
        External CSS Specificity: External CSS is linked via a link element in the head section and is written in separate .css files. It has the lowest specificity but provides the best maintainability for larger projects.

        Universal Selector: a special type of CSS selector that matches any element in the document. It is often used to apply a style to all elements on the page, which can be useful for resetting or normalizing styles across different browsers. The universal selector has the lowest specificity value of any selector.
            Basic Syntax: * {}
            Specificty Value: (0,0,0,0)

        Type Selectors: These selectors target elements based on their tag name. Type selectors have a relatively low specificity compared to other selectors.
            Specificty Value: (0,0,0,1)

        Class Selectors: These selectors target elements based on their tag name. Class slectors are very commonly used as they have a relatively high specificity level, while still having multiple options for higher specificity elements to over write sections coders wish to style differently.
            Basic Syntax: .Class {}

        ID Selectors: These selectors target elements based on their tag name. Class slectors are very commonly used as they have a very high specificity level. and will only be overwritten by internal or inline CSS.
            Basic Syntax: #id {}
        
        !important Keyword: used to give a style rule the highest priority, allowing it to override any other declarations for a property. When used, it forces the browser to apply the specified style, regardless of the specificty of other selectors. You should be cautious when using this keyword - as it can make yours CSS harder to maintain and debug. 
        
        Cascade Algorithm: An algorithm used to decide which CSS rules to apply when there are multiple styles targeting the same element. It ensures that the most appropriate styles are used, based on a set of well-defined rules.
        
        CSS Inheritance: The process by which styles are passed down from parent elements to their children. Inheritance allows you to define styles at a higher level in the document tree and have them apply to multiple elements without explicitly specifying them for each element.

LISTS, LINKS, BACKGROUND AND BORDERS - REVIEW GUIDE
    Syling Lists 
        Line-height Property: This property is used to create space between lines of text. 
            Accepted Values: normal, numbers, percentages, length units (ex. em)

        List-style-type Property: This property is used to specify the marker for a list item. 
            Acceptable Values: circle, disc, decimal

        List-style-positions Property: This property is used to set the position for the list marker.
            Acceptable Values: inside OR outside

        List-style-image Property: This property is used to use an image for the list item marker. A common use case is to use the url function with a value set to a valid image location.

    Space List Items Using Margin
        Apart from line-height, margins can also be used in CSS to enhance the spacing and readability of list items.

        Margins can create space outside each <li> element, allowing control over the gap between list items.

        Margin-bottom - is used to create space below each list item. 
        Example: margin-bottom: 10px; will create a 10-pixel gap below each list item.

    Styling Links
        pseudo-class: This is a keyword added to a selector that allows you to select elements based on a particular state.

        :link pseudo-class: This pseudo-class is used to style links that have not be visited by the user.

        :visited pseudo-class: This pseudo-class is used to style links where a user has already visited.

        :hover pseudo-class: This pseudo-class is used to style an elements where a user is actively hovering over them.

        :focus pseudo-class: This pseudo-class is used to style an element when it receives focus. 
            Examples Include: input, select

        :active pseudo-class: This pseudo-class is used to style an element that was activated by the user. A common example would be when the user clicks on a button.

    Working with Backgrounds and Borders
        background-size Property: This property is used to set the background size for an element.
            Examples Include: cover, contain

        background-repeat Property: This property is used to determine how background images should be repeated along the horizontal and vertical axes. 
            The default value for background-repeat is repeat meaning the image will repeat both horizontally and vertically. 
            You can also specify that there should be no repeat by using the no-repeat property.

        background-position Property: This property is used to specify the position of the background image. 
        It can be set to a specific length, percentage, or keyword values like top, bottom, left, right, and center.

        background-attachment Property: This property is used to specify whether the background image should scroll with the content or remain fixed in place. 
        The main values are scroll (default), where the background image scrolls with the content, and fixed, where the background image stays in the same position on the screen.

        background-image Property: This property is used to set the background image of an element. 
        You can set multiple background images at the same time and use either the url, radial-gradient or linear-gradient functions as values.

        background Property: This is the shorthand property for setting all background properties in one declaration. 
        Here is an example of setting the background image and setting it to not repeat: background: no-repeat url("example-url-goes-here");

        Good Contract for Background and Foreground Colors:
        It is important to ensure that the background and foreground colors have good contrast to make the text readable. The Web Content Accessibility Guidelines (WCAG) recommend a minimum contrast ratio of 4.5:1 for normal text and 3:1 for large text.
        
    Borders 
        border-top Property: This property is used to set the styles for the top border of an element. 
        border-top: 3px solid blue; sets a 3-pixel-wide solid blue border on the top side of the element.

        border-right Property: This property is used to set the styles for the right border of an element. 
        border-right: 2px solid red; sets a 2-pixel-wide solid red border on the right side of the element.

        border-bottom Property: This property is used to set the styles for the bottom border of an element. 
        border-bottom: 1px dashed green; sets a 1-pixel-wide dashed green border on the bottom side of the element.

        border-left Property: This property is used to set the styles for the left border of an element. border-left: 
        4px dotted orange; sets a 4-pixel-wide dotted orange border on the left side of the element.

        border Property: This is the shorthand property for setting the width, style, and color of an element's border. 
        border: 1px solid black; sets a 1-pixel-wide solid black border.

        border-radius Property: This property is used to create rounded corners for an element's border.

        border-style Property: This property is used to set the style of an element's border. 
        Accepted Values: solid, dashed, dotted, and double.

    Gradients
        linear-gradient () Function: This CSS function is used to create a transition between multiple colors along a straight line.

        radial-gradient () Function: This CSS function creates an image that radiates from a particular point, like a circle or an ellipse, and gradually transitions between multiple colors.
